"""added tables traffic_measurement and road_capacity

Revision ID: 4a985a0dc51d
Revises: 288619513aa1
Create Date: 2025-05-08 14:04:06.601049

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4a985a0dc51d'
down_revision: Union[str, None] = '288619513aa1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roadcapacity',
    sa.Column('road_id', sa.Uuid(), nullable=False),
    sa.Column('lanes', sa.Integer(), nullable=False),
    sa.Column('speed_limit', sa.Integer(), nullable=False),
    sa.Column('max_capacity', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=400), nullable=True),
    sa.ForeignKeyConstraint(['road_id'], ['road.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('road_id')
    )
    op.create_index('idx_road_capacity_road_id', 'roadcapacity', ['road_id'], unique=False)
    op.create_table('trafficmeasurement',
    sa.Column('road_id', sa.Uuid(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('average_speed', sa.Float(), nullable=False),
    sa.Column('flow_rate', sa.Integer(), nullable=False),
    sa.Column('density', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['road_id'], ['road.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_traffic_road_id_timestamp', 'trafficmeasurement', ['road_id', 'timestamp'], unique=False)
    op.drop_index('idx_car_created_at', table_name='car')
    op.create_index('idx_car_created_at', 'car', ['created_at'], unique=False, postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_road_condition_created_at', table_name='roadcondition')
    op.create_index('idx_road_condition_created_at', 'roadcondition', ['created_at'], unique=False, postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_road_condition_created_at', table_name='roadcondition', postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_road_condition_created_at', 'roadcondition', [sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_car_created_at', table_name='car', postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.create_index('idx_car_created_at', 'car', [sa.text('created_at DESC')], unique=False)
    op.drop_index('idx_traffic_road_id_timestamp', table_name='trafficmeasurement')
    op.drop_table('trafficmeasurement')
    op.drop_index('idx_road_capacity_road_id', table_name='roadcapacity')
    op.drop_table('roadcapacity')
    # ### end Alembic commands ###
