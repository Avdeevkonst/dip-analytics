"""init tables

Revision ID: ec13c5531d23
Revises: 
Create Date: 2025-03-01 10:24:39.278195

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ec13c5531d23'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('car',
    sa.Column('plate_number', sa.String(length=255), nullable=False),
    sa.Column('model', sa.String(length=255), nullable=False),
    sa.Column('avarage_speed', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_car_plate_number', 'car', ['plate_number'], unique=False)
    op.create_index('idx_pages_created_at', 'car', ['created_at'], unique=False, postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.create_table('road',
    sa.Column('start', sa.String(length=255), nullable=False),
    sa.Column('end', sa.String(length=255), nullable=False),
    sa.Column('length', sa.Float(), nullable=False),
    sa.Column('city', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=400), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_road_city'), 'road', ['city'], unique=False)
    op.create_table('roadcondition',
    sa.Column('road_id', sa.Uuid(), nullable=False),
    sa.Column('weather_status', sa.Enum('DRY', 'WET', 'SNOWY', 'CLOUDY', 'ICY', 'MUDDY', name='weather'), nullable=False),
    sa.Column('jam_status', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'BLOCKED', name='jam'), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=400), nullable=True),
    sa.ForeignKeyConstraint(['road_id'], ['road.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_road_condition_road_id', 'roadcondition', ['road_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_road_condition_road_id', table_name='roadcondition')
    op.drop_table('roadcondition')
    op.drop_index(op.f('ix_road_city'), table_name='road')
    op.drop_table('road')
    op.drop_index('idx_pages_created_at', table_name='car', postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.drop_index('idx_car_plate_number', table_name='car')
    op.drop_table('car')
    op.execute("DROP TYPE weather;")
    op.execute("DROP TYPE jam;")
    # ### end Alembic commands ###
